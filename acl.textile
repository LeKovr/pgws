h1. Разграничение доступа

{{toc}}

h2. Введение

В PWL весь фунционал разделяется на классы, для каждого из которых объект класса определяется по фиксированному количеству идентификаторов.
Уровень доступа - это локальное для класса понятие, соответствующее различиям в его функционале. Каждая реальная система имеет свою систему уровней доступа. Отображение второго на первое производится универсальным образом - функцией класс_acl().

Методы, реализованные в программном интерфейсе, сгруппированы следующим образом:

Все объекты разбиты на классы (таблица class)
Для каждого класса задается количество идентификаторов, необходимых для определения конкретного экземпляра класса.
Например, класс "Компания" имеет один идентификатор (код компании)

Для каждого класса заданы:
# список возможных состояний экземпляра класса (таблица class_status)
# cписок возможных уровней доступа пользователя к экземпляру класса (таблица class_acl)
# cписок возможных операций (акций) над экземпляром класса (таблица class_action)
# список допустимых акций для каждого статуса (таблица class_status_action)
# список допустимых уровней доступа для каждой акции (таблица class_action_acl)

Для методов интерфейса (таблица method) и страниц сайта (таблица page) задаются соответствующие им идентификаторы класса и акции

h2. Определения

Т.о., приняты следующие определения:
*Класс* - тип сущности, которая хранится в БД и над которой могут производиться операции. 
*Экземпляр класса* - конкретная сущность заданного типа, определяется классом и идентификатором экземпляра
*Статус* - одно из возможных состояний экземпляра 
*Метод* - какое-либо действие над экземпляром класса
*Акция* - группировка методов, идентичных по статусу экземпляра и доступности для заданного уровня доступа 
*Уровень доступа* - отношение пользователя к экземпляру (создатель, сотрудник, начальник создателя и т.п.), не зависит от статуса. пользователь может иметь несколько уровней доступа к одному экземпляру одновременно

h3. Алгоритм определения прав доступа

Исходные данные:
* sid - идентификатор сессии
* идентификаторы экземпляра
* имя метода и остальные его аргументы
* class_id - класс запрошенного экземпляра
* action_id - акция, которой соответствует запрошенный метод

Алгоритм:
# По class_id и идентификаторам экземпляра из аргументов определяется экземпляр и его текущее состояние (status_id)
# По class_id, идентификаторам экземпляра и sid хранимым кодом рассчитывается список уровней доступа пользователя к экземпляру (user acl)
# По class_id, status_id, action_id определяется список уровней доступа для которых акция разрешена. Значения из этого списка, присутствующие в user acl, составляют список эффективных acl пользователя. 
# Вызов метода разрешен, если список эффективных acl не пуст

Список эффективных acl передается в шаблонизатор при построении страницы и может быть передан в числе аргументов вызова метода API если это указано в его описании.

h2. Схема данных

!ws_acl.png!
рис 1. Схема данных подсистемы разграничения доступа

